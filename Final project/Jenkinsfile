pipeline {
    agent any
    environment {
        DOCKER_IMAGE = "fizza424/dockerhub_repo:latest"   // your repo
        EC2_USER = "ec2-user"
        EC2_HOST = "13.235.78.253"
        PEM_FILE = "C:/Users/HP/Downloads/fizza-ec2-key.pem"
        S3_BUCKET = "fizza-devops-logs"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker image') {
            steps {
                powershell """
                    docker build -t $env:DOCKER_IMAGE .
                """
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-pass', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    powershell """
                        echo $env:DOCKER_PASS | docker login -u $env:DOCKER_USER --password-stdin
                        docker push $env:DOCKER_IMAGE
                    """
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                powershell """
                    ssh -o StrictHostKeyChecking=no -i $env:PEM_FILE $env:EC2_USER@$env:EC2_HOST `
                        "docker pull $env:DOCKER_IMAGE && `
                         docker stop nodeapp || true && `
                         docker rm nodeapp || true && `
                         docker run -d --name nodeapp -p 80:3000 $env:DOCKER_IMAGE"
                """
            }
        }

        stage('Backup logs to S3') {
            steps {
                powershell """
                    ssh -i $env:PEM_FILE $env:EC2_USER@$env:EC2_HOST "docker logs nodeapp > app.log"
                    scp -i $env:PEM_FILE $env:EC2_USER@$env:EC2_HOST:app.log .
                    aws s3 cp app.log s3://$env:S3_BUCKET/
                """
            }
        }
    }
}


  post {
    always { cleanWs() }
  }

}
